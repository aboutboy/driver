diff --git a/mt76x3/ap/ap_cfg.c b/mt76x3/ap/ap_cfg.c
index c0aef63..602b623 100644
--- a/mt76x3/ap/ap_cfg.c
+++ b/mt76x3/ap/ap_cfg.c
@@ -8698,26 +8698,29 @@ VOID RTMPIoctlStatistics(RTMP_ADAPTER *pAd, RTMP_IOCTL_INPUT_STRUCT *wrq)
     			if (IS_ENTRY_CLIENT(pEntry) && pEntry->Sst==SST_ASSOC)
 				{
 					//sprintf(msg+strlen(msg), "sta mac: %02x:%02x:%02x:%02x:%02x:%02x\n", pEntry->wdev->if_addr[0], pEntry->wdev->if_addr[1],  pEntry->wdev->if_addr[2],  pEntry->wdev->if_addr[3],  pEntry->wdev->if_addr[4],  pEntry->wdev->if_addr[5]);
-					UINT32 lastRxRate = pEntry->LastRxRate;
-					UINT32 lastTxRate = pEntry->LastTxRate;
+					//UINT32 lastRxRate = pEntry->LastRxRate;
+					//UINT32 lastTxRate = pEntry->LastTxRate;
+					MACHTTRANSMIT_SETTING lastTxRate, lastRxRate;
+					lastTxRate.word = pEntry->LastTxRate;
+					lastRxRate.word = pEntry->LastRxRate;
 #ifdef MT_MAC
 					if (pAd->chipCap.hif_type == HIF_MT)  {
-						StatRateToString(pAd, msg, 0, lastTxRate);
-						StatRateToString(pAd, msg, 1, lastRxRate);
+						StatRateToString(pAd, msg, 0, lastTxRate.word);
+						StatRateToString(pAd, msg, 1, lastRxRate.word);
 					}
 					else
 #endif /* MT_MAC */
 					{
 						sprintf(msg+strlen(msg), "Last TX Rate                    = MCS%d, %2dM, %cGI, %s%s\n",
-							lastTxRate & 0x7F,  ((lastTxRate>>7) & 0x1)? 40: 20,
-							((lastTxRate>>8) & 0x1)? 'S': 'L',
-							phyMode[(lastTxRate>>14) & 0x3],
-							((lastTxRate>>9) & 0x3)? ", STBC": " ");
+							lastTxRate.field.MCS,  lastTxRate.field.BW ? 40: 20,
+							lastTxRate.field.ShortGI ? 'S': 'L',
+							phyMode[(lastTxRate.field.MODE) & 0x3],
+							lastTxRate.field.STBC ? ", STBC": " ");
 						sprintf(msg+strlen(msg), "Last RX Rate                    = MCS%d, %2dM, %cGI, %s%s\n",
-							lastRxRate & 0x7F,  ((lastRxRate>>7) & 0x1)? 40: 20,
-							((lastRxRate>>8) & 0x1)? 'S': 'L',
-							phyMode[(lastRxRate>>14) & 0x3],
-							((lastRxRate>>9) & 0x3)? ", STBC": " ");
+							lastRxRate.field.MCS,  lastRxRate.field.BW ? 40: 20,
+							lastRxRate.field.ShortGI ? 'S': 'L',
+							phyMode[(lastRxRate.field.MODE) & 0x3],
+							lastRxRate.field.STBC ? ", STBC": " ");
 					}
 
 					break;
diff --git a/mt76x3/common/cmm_info.c b/mt76x3/common/cmm_info.c
index 3da5d5e..e722e77 100644
--- a/mt76x3/common/cmm_info.c
+++ b/mt76x3/common/cmm_info.c
@@ -2691,6 +2691,14 @@ copy_mac_table_entry(RT_802_11_MAC_ENTRY *pDst, MAC_TABLE_ENTRY *pEntry)
 
 	pDst->TxRate.word = pEntry->HTPhyMode.word;
 	pDst->LastRxRate = pEntry->LastRxRate;
+	pDst->TxPackets	= pEntry->TxPackets.QuadPart; //TxPackets.QuadPart
+	pDst->RxPackets	= pEntry->RxPackets.QuadPart;  //RxPackets.QuadPart
+	pDst->TxBytes	= pEntry->TxBytes;
+	pDst->RxBytes	= pEntry->RxBytes;
+	pDst->RxBytes	= pEntry->RxBytes;
+	pDst->LastTxOkCount = pEntry->LastTxOkCount; /* TxSuccess count in last Rate Adaptation interval */
+	pDst->LastTxPER = pEntry->LastTxPER;	/* Tx PER in last Rate Adaptation interval */
+
 }
 
 
diff --git a/mt76x3/include/oid.h b/mt76x3/include/oid.h
index 4255a85..88c7882 100644
--- a/mt76x3/include/oid.h
+++ b/mt76x3/include/oid.h
@@ -1058,6 +1058,18 @@ typedef struct _RT_802_11_EVENT_TABLE {
 
 /* MIMO Tx parameter, ShortGI, MCS, STBC, etc.  these are fields in TXWI. Don't change this definition!!! */
 typedef union _MACHTTRANSMIT_SETTING {
+#ifdef RT_BIG_ENDIAN
+	struct {
+		USHORT MODE:3;	/* Use definition MODE_xxx. */
+		USHORT iTxBF:1;
+		USHORT eTxBF:1;
+		USHORT STBC:1;	/* only support in HT/VHT mode with MCS0~7 */
+		USHORT ShortGI:1;
+		USHORT BW:2;	/* channel bandwidth 20MHz/40/80 MHz */
+		USHORT ldpc:1;
+		USHORT MCS:6;	/* MCS */
+	} field;
+#else
 	struct {
 		USHORT MCS:6;
 		USHORT ldpc:1;
@@ -1068,6 +1080,7 @@ typedef union _MACHTTRANSMIT_SETTING {
 		USHORT iTxBF:1;
 		USHORT MODE:3;
 	} field;
+#endif
 	USHORT word;
 } MACHTTRANSMIT_SETTING, *PMACHTTRANSMIT_SETTING;
 
@@ -1083,6 +1096,12 @@ typedef struct _RT_802_11_MAC_ENTRY {
 	UINT32 ConnectedTime;
 	MACHTTRANSMIT_SETTING TxRate;
 	UINT32 LastRxRate;
+	ULONG 	TxPackets; //TxPackets.QuadPart
+	ULONG 	RxPackets;  //RxPackets.QuadPart
+	ULONG 	TxBytes;
+	ULONG 	RxBytes;
+	ULONG 	LastTxOkCount; /* TxSuccess count in last Rate Adaptation interval */
+	UCHAR 	LastTxPER;	/* Tx PER in last Rate Adaptation interval */
 } RT_802_11_MAC_ENTRY, *PRT_802_11_MAC_ENTRY;
 
 typedef struct _RT_802_11_MAC_TABLE {
