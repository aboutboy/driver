diff --git a/rt2860v2/ap/ap_cfg.c b/rt2860v2/ap/ap_cfg.c
index 8065bbc..17d8525 100644
--- a/rt2860v2/ap/ap_cfg.c
+++ b/rt2860v2/ap/ap_cfg.c
@@ -9180,7 +9180,8 @@ VOID RTMPIoctlStatistics(
 #ifdef RTMP_EFUSE_SUPPORT
 	UINT efusefreenum=0;
 #endif /* RTMP_EFUSE_SUPPORT */
-
+	UINT32 temperature=0;
+	
 /*	msg = (PSTRING)kmalloc(sizeof(CHAR)*(2048), MEM_ALLOC_FLAG); */
 	os_alloc_mem(pAd, (UCHAR **)&msg, sizeof(CHAR)*(2048));
 	if (msg == NULL) {
@@ -9204,6 +9205,13 @@ VOID RTMPIoctlStatistics(
 		rxCount = pAd->WlanCounters.ReceivedFragmentCount.QuadPart;
 	}
 
+    if (pAd->chipOps.ChipGetCurrentTemp != NULL)
+    {
+      RTMP_CHIP_OP *pChipOps = &pAd->chipOps;
+      temperature = pChipOps->ChipGetCurrentTemp(pAd);
+      sprintf(msg+strlen(msg), "Current temperature             = %d\n", temperature);
+    }
+    
     sprintf(msg+strlen(msg), "Tx success                      = %ld\n", txCount);
 #ifdef ENHANCED_STAT_DISPLAY
 	per = txCount==0? 0: 1000*(pAd->WlanCounters.RetryCount.u.LowPart+pAd->WlanCounters.FailedCount.u.LowPart)/(pAd->WlanCounters.RetryCount.u.LowPart+pAd->WlanCounters.FailedCount.u.LowPart+txCount);
@@ -9277,13 +9285,21 @@ VOID RTMPIoctlStatistics(
     			PMAC_TABLE_ENTRY pEntry = &(pAd->MacTab.Content[i]);
     			if (IS_ENTRY_CLIENT(pEntry) && pEntry->Sst==SST_ASSOC)
 				{
-					UINT32 lastRxRate = pEntry->LastRxRate;
-
+					MACHTTRANSMIT_SETTING lastRxRate;
+					lastRxRate.word = pEntry->LastRxRate;
+					//UINT32 lastTxRate = pEntry->HTPhyMode.word;
+					
+					sprintf(msg+strlen(msg), "Last TX Rate                    = MCS %d, %2dM, %cGI, %s%s\n",
+							pEntry->HTPhyMode.field.MCS,  pEntry->HTPhyMode.field.BW? 40: 20,
+							pEntry->HTPhyMode.field.ShortGI? 'S': 'L',
+							phyMode[pEntry->HTPhyMode.field.MODE],
+							pEntry->HTPhyMode.field.STBC? ", STBC": " ");
+						
 					sprintf(msg+strlen(msg), "Last RX Rate                    = MCS %d, %2dM, %cGI, %s%s\n",
-							lastRxRate & 0x7F,  ((lastRxRate>>7) & 0x1)? 40: 20,
-							((lastRxRate>>8) & 0x1)? 'S': 'L',
-							phyMode[(lastRxRate>>14) & 0x3],
-							((lastRxRate>>9) & 0x3)? ", STBC": " ");
+							lastRxRate.field.MCS,  lastRxRate.field.BW? 40: 20,
+							lastRxRate.field.ShortGI? 'S': 'L',
+							phyMode[(lastRxRate.field.MODE) & 0x3],
+							lastRxRate.field.STBC? ", STBC": " ");
 
 #if defined(RT2883) || defined(RT3883)
 					sprintf(msg+strlen(msg), "BF SNR                          = %d.%02d, %d.%02d, %d.%02d  FO:%02X\n",
diff --git a/rt2860v2/ap/ap_data.c b/rt2860v2/ap/ap_data.c
index 09c59b5..55ff2dd 100644
--- a/rt2860v2/ap/ap_data.c
+++ b/rt2860v2/ap/ap_data.c
@@ -4465,7 +4465,16 @@ VOID APHandleRxDataFrame(
 
 	if (pRxD->U2M)
 	{
-		pEntry->LastRxRate = (ULONG)((pRxWI->MCS) + (pRxWI->BW <<7) + (pRxWI->ShortGI <<8) + (pRxWI->STBC <<9) + (pRxWI->PHYMODE <<14));
+		MACHTTRANSMIT_SETTING LastRxRate;
+		LastRxRate.field.MCS = pRxWI->MCS;
+		LastRxRate.field.BW = pRxWI->BW;
+		LastRxRate.field.ShortGI = pRxWI->ShortGI;
+		LastRxRate.field.STBC = pRxWI->STBC;
+		LastRxRate.field.MODE = pRxWI->PHYMODE;
+		
+		pEntry->LastRxRate = LastRxRate.word;
+		
+		//pEntry->LastRxRate = (ULONG)((pRxWI->MCS) + (pRxWI->BW <<7) + (pRxWI->ShortGI <<8) + (pRxWI->STBC <<9) + (pRxWI->PHYMODE <<14));
 
 #ifdef TXBF_SUPPORT
 		if (pRxWI->ShortGI)
diff --git a/rt2860v2/common/cmm_info.c b/rt2860v2/common/cmm_info.c
index 404b822..d93d03e 100644
--- a/rt2860v2/common/cmm_info.c
+++ b/rt2860v2/common/cmm_info.c
@@ -3802,6 +3802,13 @@ copy_mac_table_entry(RT_802_11_MAC_ENTRY *pDst, MAC_TABLE_ENTRY *pEntry)
 	pDst->TxRate.field.MODE		= pEntry->HTPhyMode.field.MODE;
 
 	pDst->LastRxRate = pEntry->LastRxRate;
+	
+	pDst->TxPackets			= pEntry->TxPackets.QuadPart; //TxPackets.QuadPart
+	pDst->RxPackets			= pEntry->RxPackets.QuadPart;  //RxPackets.QuadPart
+	pDst->TxBytes			= pEntry->TxBytes;
+	pDst->RxBytes			= pEntry->RxBytes;
+	pDst->LastTxOkCount		= pEntry->LastTxOkCount; /* TxSuccess count in last Rate Adaptation interval */
+	pDst->LastTxPER 		= pEntry->LastTxPER;	/* Tx PER in last Rate Adaptation interval */
 }
 
 
diff --git a/rt2860v2/include/oid.h b/rt2860v2/include/oid.h
index f08c395..dbd73a9 100644
--- a/rt2860v2/include/oid.h
+++ b/rt2860v2/include/oid.h
@@ -987,25 +987,25 @@ typedef struct _NDIS_802_11_CAPABILITY {
 typedef union _HTTRANSMIT_SETTING {
 #ifdef RT_BIG_ENDIAN
 	struct {
-		USHORT MODE:2;	/* Use definition MODE_xxx. */
+		USHORT MODE:3;	/* Use definition MODE_xxx. */
 		USHORT iTxBF:1;
-		USHORT rsv:1;
 		USHORT eTxBF:1;
-		USHORT STBC:2;	/* SPACE */
+		USHORT STBC:1;	/* only support in HT/VHT mode with MCS0~7 */
 		USHORT ShortGI:1;
-		USHORT BW:1;	/* channel bandwidth 20MHz or 40 MHz */
-		USHORT MCS:7;	/* MCS */
+		USHORT BW:2;	/* channel bandwidth 20MHz/40/80 MHz */
+		USHORT ldpc:1;
+		USHORT MCS:6;	/* MCS */
 	} field;
 #else
 	struct {
-		USHORT MCS:7;	/* MCS */
-		USHORT BW:1;	/* channel bandwidth 20MHz or 40 MHz */
+		USHORT MCS:6;
+		USHORT ldpc:1;
+		USHORT BW:2;
 		USHORT ShortGI:1;
-		USHORT STBC:2;	/* SPACE */
+		USHORT STBC:1;
 		USHORT eTxBF:1;
-		USHORT rsv:1;
 		USHORT iTxBF:1;
-		USHORT MODE:2;	/* Use definition MODE_xxx. */
+		USHORT MODE:3;
 	} field;
 #endif
 	USHORT word;
@@ -1074,6 +1074,18 @@ typedef struct _RT_802_11_EVENT_TABLE {
 
 /* MIMO Tx parameter, ShortGI, MCS, STBC, etc.  these are fields in TXWI. Don't change this definition!!! */
 typedef union _MACHTTRANSMIT_SETTING {
+#ifdef RT_BIG_ENDIAN
+	struct {
+		USHORT MODE:3;	/* Use definition MODE_xxx. */
+		USHORT iTxBF:1;
+		USHORT eTxBF:1;
+		USHORT STBC:1;	/* only support in HT/VHT mode with MCS0~7 */
+		USHORT ShortGI:1;
+		USHORT BW:2;	/* channel bandwidth 20MHz/40/80 MHz */
+		USHORT ldpc:1;
+		USHORT MCS:6;	/* MCS */
+	} field;
+#else
 	struct {
 		USHORT MCS:6;
 		USHORT ldpc:1;
@@ -1084,6 +1096,7 @@ typedef union _MACHTTRANSMIT_SETTING {
 		USHORT iTxBF:1;
 		USHORT MODE:3;
 	} field;
+#endif
 	USHORT word;
 } MACHTTRANSMIT_SETTING, *PMACHTTRANSMIT_SETTING;
 
@@ -1099,6 +1112,12 @@ typedef struct _RT_802_11_MAC_ENTRY {
 	UINT32 ConnectedTime;
 	MACHTTRANSMIT_SETTING TxRate;
 	UINT32 LastRxRate;
+	ULONG 	TxPackets; //TxPackets.QuadPart
+	ULONG 	RxPackets;  //RxPackets.QuadPart
+	ULONG 	TxBytes;
+	ULONG 	RxBytes;
+	ULONG 	LastTxOkCount; /* TxSuccess count in last Rate Adaptation interval */
+	UCHAR 	LastTxPER;	/* Tx PER in last Rate Adaptation interval */
 } RT_802_11_MAC_ENTRY, *PRT_802_11_MAC_ENTRY;
 
 typedef struct _RT_802_11_MAC_TABLE {
