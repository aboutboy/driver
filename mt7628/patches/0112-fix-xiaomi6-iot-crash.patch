diff --git a/mt7628/embedded/common/mlme.c b/mt7628/embedded/common/mlme.c
index 51067af..bbb4be7 100644
--- a/mt7628/embedded/common/mlme.c
+++ b/mt7628/embedded/common/mlme.c
@@ -1274,7 +1274,7 @@ NDIS_STATUS MlmeInit(RTMP_ADAPTER *pAd)
 		ActionStateMachineInit(pAd, &pAd->Mlme.ActMachine, pAd->Mlme.ActFunc);
 
 		/* Init mlme periodic timer*/
-		RTMPInitTimer(pAd, &pAd->Mlme.PeriodicTimer, GET_TIMER_FUNCTION(MlmePeriodicExec), pAd, TRUE);
+		RTMPInitTimer(pAd, &pAd->Mlme.PeriodicTimer, GET_TIMER_FUNCTION(MlmePeriodicExecTimer), pAd, TRUE);
 
 		/* Set mlme periodic timer*/
 		RTMPSetTimer(&pAd->Mlme.PeriodicTimer, MLME_TASK_EXEC_INTV);
@@ -1510,6 +1510,17 @@ VOID MlmeResetRalinkCounters(RTMP_ADAPTER *pAd)
 }
 
 
+VOID MlmePeriodicExecTimer(
+	IN PVOID SystemSpecific1, 
+	IN PVOID FunctionContext, 
+	IN PVOID SystemSpecific2, 
+	IN PVOID SystemSpecific3) 
+{
+	RTMP_ADAPTER *pAd = (RTMP_ADAPTER *)FunctionContext;
+	RTEnqueueInternalCmd(pAd, CMDTHREAD_MLME_PERIOIDC_EXEC, NULL, 0);
+}
+
+
 /*
 	==========================================================================
 	Description:
@@ -1527,15 +1538,9 @@ VOID MlmeResetRalinkCounters(RTMP_ADAPTER *pAd)
 	==========================================================================
  */
 #define ADHOC_BEACON_LOST_TIME		(8*OS_HZ)  /* 8 sec*/
-VOID MlmePeriodicExec(
-	IN PVOID SystemSpecific1, 
-	IN PVOID FunctionContext, 
-	IN PVOID SystemSpecific2, 
-	IN PVOID SystemSpecific3) 
+VOID MlmePeriodicExec(IN PRTMP_ADAPTER pAd, IN PCmdQElmt CMDQelmt)
 {
 	ULONG TxTotalCnt;
-	RTMP_ADAPTER *pAd = (RTMP_ADAPTER *)FunctionContext;
-
 
 	/* No More 0x84 MCU CMD from v.30 FW*/
 
diff --git a/mt7628/embedded/common/rtmp_init.c b/mt7628/embedded/common/rtmp_init.c
index e12fb55..5231b1f 100644
--- a/mt7628/embedded/common/rtmp_init.c
+++ b/mt7628/embedded/common/rtmp_init.c
@@ -2910,6 +2910,13 @@ VOID CMDHandler(RTMP_ADAPTER *pAd)
                 }
                 break;
 #endif /* CONFIG_STA_SUPPORT */		
+
+				case CMDTHREAD_MLME_PERIOIDC_EXEC:
+				{
+					MlmePeriodicExec(pAd, cmdqelmt);
+				}
+				break;
+
 				default:
 					MTWF_LOG(DBG_CAT_ALL, DBG_SUBCAT_ALL, DBG_LVL_ERROR, ("--> Control Thread !! ERROR !! Unknown(cmdqelmt->command=0x%x) !! \n", cmdqelmt->command));
 					break;
diff --git a/mt7628/embedded/common/rtmp_timer.c b/mt7628/embedded/common/rtmp_timer.c
index db7d28e..37e11aa 100644
--- a/mt7628/embedded/common/rtmp_timer.c
+++ b/mt7628/embedded/common/rtmp_timer.c
@@ -32,7 +32,7 @@
 #include "rt_config.h"
 
 
-BUILD_TIMER_FUNCTION(MlmePeriodicExec);
+BUILD_TIMER_FUNCTION(MlmePeriodicExecTimer);
 /*BUILD_TIMER_FUNCTION(MlmeRssiReportExec);*/
 BUILD_TIMER_FUNCTION(AsicRxAntEvalTimeout);
 BUILD_TIMER_FUNCTION(APSDPeriodicExec);
diff --git a/mt7628/embedded/include/rtmp.h b/mt7628/embedded/include/rtmp.h
index 6ff1034..e7020c7 100644
--- a/mt7628/embedded/include/rtmp.h
+++ b/mt7628/embedded/include/rtmp.h
@@ -8064,12 +8064,14 @@ INT AsicAutoFallbackInit(RTMP_ADAPTER *pAd);
 
 
 
-VOID  MlmePeriodicExec(
+VOID  MlmePeriodicExecTimer(
 	IN PVOID SystemSpecific1,
 	IN PVOID FunctionContext,
 	IN PVOID SystemSpecific2,
 	IN PVOID SystemSpecific3);
 
+VOID MlmePeriodicExec(IN PRTMP_ADAPTER pAd, IN PCmdQElmt CMDQelmt);
+
 VOID LinkDownExec(
 	IN PVOID SystemSpecific1,
 	IN PVOID FunctionContext,
diff --git a/mt7628/embedded/include/rtmp_cmd.h b/mt7628/embedded/include/rtmp_cmd.h
index a80c384..d49d48d 100644
--- a/mt7628/embedded/include/rtmp_cmd.h
+++ b/mt7628/embedded/include/rtmp_cmd.h
@@ -53,6 +53,7 @@ typedef struct _CmdQ {
 #define CMDTHREAD_FORCE_WAKE_UP						0x0D73010D
 #define CMDTHREAD_FORCE_SLEEP_AUTO_WAKEUP			0x0D73010E
 #endif /* CONFIG_STA_SUPPORT */
+#define CMDTHREAD_MLME_PERIOIDC_EXEC				0x0D730133
 #endif /* RTMP_MAC_PCI || RTMP_RBUS_SUPPORT */
 
 #define CMDTHREAD_RESPONSE_EVENT_CALLBACK		0x0D730123
diff --git a/mt7628/embedded/include/rtmp_timer.h b/mt7628/embedded/include/rtmp_timer.h
index 63d7016..1862948 100644
--- a/mt7628/embedded/include/rtmp_timer.h
+++ b/mt7628/embedded/include/rtmp_timer.h
@@ -124,7 +124,7 @@ void rtmp_timer_##_func(unsigned long data)										\
 }
 #endif /* RTMP_TIMER_TASK_SUPPORT */
 
-DECLARE_TIMER_FUNCTION(MlmePeriodicExec);
+DECLARE_TIMER_FUNCTION(MlmePeriodicExecTimer);
 DECLARE_TIMER_FUNCTION(MlmeRssiReportExec);
 DECLARE_TIMER_FUNCTION(AsicRxAntEvalTimeout);
 DECLARE_TIMER_FUNCTION(APSDPeriodicExec);
